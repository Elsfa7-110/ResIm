#!/bin/bash
# https://github.com/pikpikcu
# twitter: @sec715

# Faforit Colors
BK=$(tput setaf 0) # Black
RD=$(tput setaf 1) # Red
GR=$(tput setaf 2) # Green
YW=$(tput setaf 3) # Yellow
BL=$(tput setaf 4) # blue
PP=$(tput setaf 5) # purple
CY=$(tput setaf 6) # Cyan
WH=$(tput setaf 7) # White
AB=$(tput setaf 8) # abuabu
MR=$(tput setaf 9) # merahmuda
GR1=$(tput setaf 10) # greenblink
KN=$(tput setaf 11) #kuning
BL1=$(tput setaf 12) # birublink
PK=$(tput setaf 13) # pink
BLC=$(tput setaf 16) #black 
BG=$(tput setab 11) 
NT=$(tput sgr0) # Netral
BD=$(tput bold) # Bold

url="$1"

banner(){ 
    echo -e  "${CY}
    ‚ñÑ‚ñÑ‚ñÑ  ‚ñÑ‚ñÑ‚ñÑ ..‚ñÑ‚ñÑ ¬∑ ‚ñ™  ‚Ä¢ ‚ñå ‚ñÑ ¬∑. 
    ‚ñÄ‚ñÑ ‚ñà¬∑‚ñÄ‚ñÑ.‚ñÄ¬∑‚ñê‚ñà ‚ñÄ. ‚ñà‚ñà ¬∑‚ñà‚ñà ‚ñê‚ñà‚ñà‚ñà‚ñ™
    ‚ñê‚ñÄ‚ñÄ‚ñÑ ‚ñê‚ñÄ‚ñÄ‚ñ™‚ñÑ‚ñÑ‚ñÄ‚ñÄ‚ñÄ‚ñà‚ñÑ‚ñê‚ñà¬∑‚ñê‚ñà ‚ñå‚ñê‚ñå‚ñê‚ñà¬∑
    ‚ñê‚ñà‚Ä¢‚ñà‚ñå‚ñê‚ñà‚ñÑ‚ñÑ‚ñå‚ñê‚ñà‚ñÑ‚ñ™‚ñê‚ñà‚ñê‚ñà‚ñå‚ñà‚ñà ‚ñà‚ñà‚ñå‚ñê‚ñà‚ñå
    .‚ñÄ  ‚ñÄ ‚ñÄ‚ñÄ‚ñÄ  ‚ñÄ‚ñÄ‚ñÄ‚ñÄ ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ  ‚ñà‚ñ™‚ñÄ‚ñÄ‚ñÄ
            [[ Recon Simple! ]]
\n"
}

url(){
    echo -e  "\n${RD}[${GR}+${RD}] ${GR1}START ON Target URLS ${NT}$url..${YW}üîç"
    sleep 3
    echo -e  "${RD}[${GR}!${RD}] ${CY}Searching For Sub-Domains..${YW}üîç"
    echo -e  "${RD}[${BL}*${RD}] ${KN}Starting Sub-Domains For assetfinder..${YW}üîç"
    assetfinder --subs-only $url | sort -u | tee -a > $out/$url-assetfinder.txt
    echo -e  "${RD}[${GR}!${RD}] ${CY}Found Sub-Domains For assetfinder: ${KN}$(cat $out/$url-assetfinder.txt | wc -l)"
    echo -e  "${RD}[${BL}*${RD}] ${KN}Starting Sub-Domains For subfinder..${YW}üîç"
    subfinder -silent -d $url | sort -u | tee -a > $out/$url-subfinder.txt
    echo -e  "${RD}[${GR}!${RD}] ${CY}Found Sub-Domains For subfinder: ${KN}$(cat $out/$url-subfinder.txt | wc -l)"
    echo -e  "${RD}[${BL}*${RD}] ${YW}Finall Subdomains..${YW}"
    echo -e  "${RD}[${BL}+${RD}] ${GR1}Done Total Subdomain: ${KN}$(cat $out/$url-final.txt | wc -l)"
    echo -e  "${CY}[!]${GR} The Following sub-domains are Scanned..."
        while read -r line;do
            r=`nslookup $line | awk '/^Address: / { print $2 }'`
            if [ "$r" == "" ];then
                echo -e  "${RD}[!]${NT} $line ${RD}‚ùå" | tee $out/$url-notalive.txt
            else
                file_exist=$(cat $out/$url-final.txt | grep -c "$r")
                if [ $file_exist -eq 0 ]; then  
                    echo -e  "${CY}[*]${NT} $line ${GR}‚úÖ" | tee $out/$url-alivee.txt
                fi
            fi
        done < "$out/$url-final.txt"
        cat $out/$url-alivee.txt | grep -Po "((http|https):\/\/)?(([\w.-]*)\.([\w]*))" > $out/$url-alive.txt
        rm -rf $out/$url-alivee.txt
    echo -e  "${RD}[${GR}*${RD}] ${GR}DONE SCAN SUBDOMAIN......."
    sleep 3
    echo -e  "${RD}[${GR}!${RD}] ${GR}Find IP for SUBDOMAIN..${YW}üîç"
    while read -r line;do
            r=`dig $line +short`
            if [ "$r" == "" ];then
                echo -e  "${RD}[!]${NT} $line ${RD}‚ùå" 
            else
                file_exist=$(cat $out/$url-alive.txt | grep -c "$r")
                if [ $file_exist -eq 0 ]; then  
                    echo -e  "${CY}[*] ${YW}Domain: ${NT}$line ${PP}$r ${GR}‚úÖ" 
                fi 
            fi
    done < "$out/$url-alive.txt"
    echo -e  "${RD}[${GR}!${RD}] ${GR}DONE CHECK IP SUBDOMAIN......."
    sleep 3
    while read -r line;do
            r=`nmap $line | grep "tcp"`
            if [ "$r" == "" ];then
                echo -e  "${RD}[!]${NT} $line ${RD}Error"
            else
                file_exist=$(cat $out/$url-alive.txt | grep -c "$r")
                if [ $file_exist -eq 0 ]; then  
                    echo -e  "${CY}[*]${YW} $line ${NT} \n$r \n"
                fi 
            fi
    done < "$out/$url-alive.txt"
    sleep 3
    echo -e "${RD}[${GR}*${RD}] ${GR}START REVERSE DNS..${YW}üîç"
    while read -r line;do
            r=`curl -s https://api.hackertarget.com/reversedns/?q=$line`
            if [ "$r" == "" ];then
                echo -e  "${RD}[!]${NT} $line ${RD}Error"
            else
                file_exist=$(cat $out/$url-alive.txt| grep -c "$r")
                if [ $file_exist -eq 0 ]; then  
                    echo -e  "${CY}[*]${YW}Domain $line ${NT} \n$r"
                fi 
            fi
    done < "$out/$url-alive.txt"
    echo -e "${RD}[${GR}*${RD}] ${GR}START REVERSEIPLOOKUP..${YW}üîç"
    while read -r line;do
            r=`curl -s https://api.hackertarget.com/reverseiplookup/?q=$line`
            if [ "$r" == "" ];then
                echo -e  "${RD}[!]${NT} $line ${RD}Error"
            else
                file_exist=$(cat $out/$url-alive.txt | grep -c "$r")
                if [ $file_exist -eq 0 ]; then  
                    echo -e  "${CY}[*]${YW}Domain $line ${NT} \n$r"
                fi 
            fi
    done < "$out/$url-alive.txt"
    echo -e "${RD}[${GR}*${RD}] ${GR}START DNSLOOKUP..${YW}üîç"
    while read -r line;do
            r=`curl -s https://api.hackertarget.com/dnslookup/?q=$line`
            if [ "$r" == "" ];then
                echo -e  "${RD}[!]${NT} $line ${RD}Error"
            else
                file_exist=$(cat $out/$url-alive.txt | grep -c "$r")
                if [ $file_exist -eq 0 ]; then  
                    echo -e  "${CY}[*]${YW}Domain $line ${NT} \n$r"
                fi 
            fi
    done < "$out/$url-alive.txt"
    echo -e "${RD}[${GR}*${RD}] ${GR}START SUBNETLOOKUP..${YW}üîç"
    while read -r line;do
            r=`curl -s https://api.hackertarget.com/subnetcalc/?q=$line`
            if [ "$r" == "" ];then
                echo -e  "${RD}[!]${NT} $line ${RD}Error"
            else
                file_exist=$(cat $out/$url-alive.txt | grep -c "$r")
                if [ $file_exist -eq 0 ]; then  
                    echo -e  "${CY}[*]${YW}Domain $line ${NT} \n$r"
                fi 
            fi
    done < "$out/$url-alive.txt"
    echo -e "${RD}[${GR}*${RD}] ${GR}START EXTRACKLINKS..${YW}üîç"
    for i in $(cat $out/$url-alive.txt | parallel -j50 -q lynx -listonly -dump );do 
        file_exist=$(cat $out/$url-alive.txt | grep -c "$i")
        if [ $file_exist -eq 0 ]; then  
            echo -e  "${CY}[*]${YW} $i ${NT}"
        fi 
    done 
    echo -e "${RD}[${GR}*${RD}]${GR} Aquatone Screenshot"
    cat $out/$url-alive.txt | aquatone -screenshot-timeout 10 -out $out/screenshots/
    exit 1
}
if [[ -z "$url" ]];
    then
    banner
    echo -e  "\t\tUSAGE:"
    echo -e  "\t\t\t$0 -u example.com\n"
else 
while true;do
    case $url in 
        "-u" | "--url") url=$2
                banner
                out="$url"
                mkdir -p $out
                url $url
        ;;
    esac
done
fi
